<template>
  <div class="page loginInput">
    <CTab :tabs="tabs" :bottomLine="bottomLine" @changeTab="handleTab" />
    <div class="form">
      <CLabelInput
        placeholder="请输入手机号码"
        label="手机号"
        :val.sync="phone"
        @update:val="handlev"
        type="number"
      />
      <CCountDownInput
        placeholder="短信验证码"
        label="验证码"
        type="number"
        :val.sync="code"
        @update:val="handleCode"
        :showLine="false"
        v-if="selectedTab == 0"
      />
      <CLabelInput
        placeholder="请输入登录密码"
        label="密 码"
        :val.sync="pw"
        type="password"
        :showLine="false"
        @update:val="handlePw"
        v-else
      />
    </div>
    <CWXButton
      text="登录"
      v-if="showWxBtn"
      @getuserinfo="handleGetUerInfo"
      external-cls="submit"
    />
    <CButton
      text="登录"
      @tap.native="handleSubmit"
      v-else
      external-cls="submit"
    />
  </div>
</template>

<script>
import wepy from '@wepy/core';
import store from 'store';
import { mapGetters, mapMutations } from '@wepy/x';
import { isPhone, showMsg } from '@/common/utils';
import {
  checkVCode,
  getPhoneCode,
  loginByPhone,
  loginByVcode,
  checkPhone,
  updateMsgById
} from '@/http/http-business';
import { reLaunch } from '@/common/navUtils';

wepy.page({
  store,
  config: {
    navigationBarTitleText: '登入'
  },
  computed: {
    ...mapGetters(['wx', 'deviceId', 'userInfo']),
    showWxBtn() {
      return !this.wx.userInfo;
    },
    disabled() {
      let isOk = isPhone(this.phone);
      if (this.selectedTab == 0) {
        isOk = isOk && /\d{4}/.test(this.code);
      } else {
        isOk = isOk && !!this.pw;
      }

      return !isOk;
    }
  },
  data: {
    tabs: [{ text: '验证码登录' }, { text: '密码登录' }],
    bottomLine: 32.0 / 375,
    phone: '15525976631',
    code: '',
    selectedTab: 0,
    pw: '123456'
  },
  methods: {
    ...mapMutations(['setToken', 'setUser']),
    handleSubmit() {
      if (this.verify()) {
        this.login();
      } else {
        showMsg('请输入正确的内容');
      }
    },
    async login() {
      try {
        let res = null;
        if (this.selectedTab == 0) {
          await checkVCode(this.phone, this.code);
          res = await loginByVcode(this.phone, this.code, this.deviceId);
        } else {
          res = await loginByPhone(this.phone, this.pw, this.deviceId);
        }
        res.userHead = this.userInfo.avatarUrl;
        res.gender = this.userInfo.gender;
        this.setUser(res);
        await updateMsgById(res.id, {
          userHead: this.userInfo.avatarUrl,
          userSex: this.userInfo.gender
        });
        reLaunch('/pages/home');
      } catch (e) {
        showMsg(e);
      }
    },
    handlev(v) {
      this.phone = v;
    },
    handlePw(v) {
      this.pw = v;
    },
    handleCode(v) {
      this.code = v;
    },
    async countCheck(v) {
      let isOk = false;
      try {
        if (!isPhone(this.phone)) {
          showMsg('请输入正确手机号');
          return;
        }
        // await checkPhone(this.phone);
        getPhoneCode(this.phone);
        isOk = true;
      } catch (e) {
        showMsg(e);
      } finally {
        return isOk;
      }
    },
    handleTab({ tab, index }) {
      this.selectedTab = index;
    },
    verify() {
      let isOk = isPhone(this.phone);
      if (this.selectedTab == 0) {
        isOk = isOk && /\d{4}/.test(this.code);
      } else {
        isOk = isOk && !!this.pw;
      }

      return isOk;
    },
    handleGetUerInfo(userInfo) {
      this.handleSubmit();
    }
  },
  onShow() {},
  created() {}
});
</script>
<style lang="scss">
@import '~basePage';
@import '~baseUI';
.loginInput {
  background-color: $pageBg;
  display: flex;
  flex-direction: column;
  align-items: center;
  .form {
    padding: 0 30rpx;
    margin: 32rpx 30rpx 0;
    background: $white;
    box-shadow: 0px 4px 8px 0px rgba(0, 0, 0, 0.05);
    border-radius: 16px;
  }
  .submit {
    margin-top: 48rpx;
    font-size: 36rpx;
  }
}
</style>
<config>
{
    navigationBarTitleText: '登入',
    usingComponents: {
    CTab:'~UI/CTab',
    CLabelInput:'~UI/CLabelInput',
    CButton:'~UI/CButton',
    CCountDownInput:'~UI/CCountDownInput',
      CWXButton:'~UI/CWXButton'

    }
}
</config>
