<template>
  <div class="page myCollectPage">
    <CTab
      :tabs="tabs"
      bottomLine="64"
      bottomLineOffset="94"
      @changeTab="handleTab"
      external-cls="CTab"
    />
    <div class="line" />

    <CListWrap1
      :type="type1"
      :params="params1"
      :show="selectedTab == 0"
      url="/api/my/getCollectList"
      :reloadKey="refreshKey1"
    >
      <MediaItem
        v-for="item in clist1"
        :media="item"
        :key="item.id"
        external-cls="MyCollectMedia"
        showFollow
        @onFollow="onFollow"
        single
      />
    </CListWrap1>

    <CListWrap1
      :type="type2"
      :params="params2"
      :show="selectedTab == 1"
      url="/api/my/getCollectList"
      :reloadKey="refreshKey1"
    >
      <MediaItem
        v-for="m in clist2"
        :key="m.id"
        :media="m"
        typeItem="text"
        external-cls="classCard1"
        selfNav
        @click="onNav(m)"
        showFollow
        @onFollow="onFollow"
        single
      />
    </CListWrap1>

    <CListWrap1
      :type="type3"
      :params="params3"
      :show="selectedTab == 2"
      url="/api/my/getQuestionCollectList"
      :reloadKey="refreshKey1"
    >
      <MyCollectTopic
        v-for="item in clist3"
        :key="item.id"
        :topic="item"
        external-cls="MyCollectTopic"
        @onFollow="onFollow"
      />
    </CListWrap1>
  </div>
</template>

<script>
import wepy from '@wepy/core';
import store from 'store';
import { mapGetters, mapMutations } from '@wepy/x';
import {
  subjectCollect,
  forumforumCollect,
  cancelSubjectCollect,
  cancelForumCollect
} from '@/http/http-business';
import { navToPage } from '@/common/navUtils';

const type1 = 'myCollectPage_1';
const type2 = 'myCollectPage_2';
const type3 = 'myCollectPage_3';
wepy.page({
  store,
  config: {
    navigationBarTitleText: ''
  },
  computed: {
    ...mapGetters(['items', 'user']),
    params1() {
      return {
        userId: this.user.id,
        type: '2'
      };
    },
    clist1() {
      const list = this.items[type1];
      return list || [];
    },
    params2() {
      return {
        userId: this.user.id,
        type: '3'
      };
    },
    clist2() {
      const list = this.items[type2];
      return list || [];
    },
    params3() {
      return {
        userId: this.user.id
      };
    },
    clist3() {
      const list = this.items[type3];
      return list || [];
    }
  },
  data: {
    tabs: [{ text: '音频' }, { text: '视频' }, { text: '话题' }],
    selectedTab: 0,
    type1,
    type2,
    type3,
    refreshKey1: new Date().getTime()
  },
  methods: {
    ...mapMutations(['setItems']),
    handleTab({ tab, index }) {
      this.selectedTab = index;
    },
    onNav(m) {
      navToPage('/pages/section2/bwktDetail', {
        subjectId: m.subjectId,
        videoItem: JSON.stringify(m),
        single: true
      });
    },
    onFollow(item) {
      const type = this.selectedTab + 1;
      if (type == 1) {
        const p =
          item.isCollect == 1
            ? cancelSubjectCollect(item.id, 2)
            : subjectCollect(item.id, 2);
        p.then(res => {
          const list = this.items[this.type1].filter(f => f.id !== item.id);
          this.setItems({
            items: list,
            type: this.type1
          });
        });
      }
      if (type == 2) {
        const p =
          item.isCollect == 1
            ? cancelSubjectCollect(item.id, 3)
            : subjectCollect(item.id, 3);
        p.then(res => {
          const list = this.items[this.type2].filter(f => f.id !== item.id);
          this.setItems({
            items: list,
            type: this.type2
          });
        });
      }
      if (type == 3) {
        const p =
          item.isCollect == 1 ? cancelForumCollect(id) : forumforumCollect(id);
        p.then(res => {
          const list = this.items[this.type3].filter(f => f.id !== item.id);
          this.setItems({
            items: list,
            type: this.type3
          });
        });
      }
    }
  },
  onShow() {
    this.refreshKey1 = new Date().getTime();
  }
});
</script>
<style lang="scss">
page {
  background: rgba(242, 242, 242, 1);
}

.myCollectPage {
  .CTab {
    width: 750rpx;
    font-size: 32rpx;
    font-weight: normal;
    color: rgba(102, 102, 102, 1);
  }
  .line {
    width: 750rpx;
    height: 1px;
    background: rgba(230, 230, 230, 1);
  }

  .MyCollectMedia {
    margin: 32rpx auto;
  }
  .classCard1 {
    margin: 32rpx auto;
  }

  .MyCollectTopic {
    margin: 32rpx auto;
  }
}
</style>
<config>
{
    navigationBarTitleText: '我的收藏',
    usingComponents: {
  CTab:'~UI/CTab',
  MyCollectMedia:'~Custom/MyCollectMedia',
  ClassCard1:'~Custom/ClassCard1',
  MyCollectTopic:'~Custom/MyCollectTopic',
  CListWrap1:'~UI/CListWrap1',
  MediaItem:'~Custom/MediaItem',

    }
}
</config>
