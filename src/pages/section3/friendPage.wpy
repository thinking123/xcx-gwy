<template>
  <div class="page friendPage" :class="{'fixed':showDocker}">
    <div class="header">
      <CTab type="radius" :tabs="tabs"
            @changeTab="handleTab"
            external-cls="ctab"/>

      <IconText @click.native="handleToQuestion"
                external-cls="titleIcon"
                external-img="titleImg"
                :text="iconText.text" :src="iconText.src"/>
    </div>
    <CDockerPoper :show="showDocker" @close="onCloseDocker" v-if="selectedTab==1">
      <COrderList :items="list" @change="onCOrderList" :sel="selOrder" slot="header"/>
      <div class="poper" slot="poper">
        <div style="display:{{selOrder==0?'block':'none'}}">
          <CListSelect :items="list1"  labelKey="text" external-cls="CListSelect1" :sel="list1Sel" @change="onCListSelect1"/>
        </div>
        <div style="display:{{selOrder==1?'block':'none'}}">
          <CCollapse :value="expandItems" @change="onExpand"      external-cls="CCollapse">
            <CCollapseItem v-for="item in list2" :key="item.id"
                           external-cls="collapse-item"
                           collapse-item="collapse-item-header"
                           :title="item.prov" :name="item.id">
              <div v-for="m in item.items" :key="m.id"
                   :class="{'selected':curSelItem == m.id}"
                   @click="onClickCCollapseItem(m)"
                   class="collapseItem">
                {{m.school}}
              </div>
            </CCollapseItem>
          </CCollapse>
        </div>

        <div style="display:{{selOrder==2?'block':'none'}}">
          <CListSelect :items="list3"  labelKey="text" external-cls="CListSelect1" :sel="list3Sel" @change="onCListSelect3"/>
        </div>


      </div>
    </CDockerPoper>



    <div class="gwyCard">
      <FriendCard
        v-for="item in items1"
        :key="item.id"
        :friend="item"
        external-cls="gwyCard-item"
      />
    </div>
  </div>
</template>

<script>
  import wepy from '@wepy/core';
  import store from 'store';
  import {getImgUrlEx , showMsg} from '@/common/utils';
  import {navToPage} from '@/common/navUtils';

  wepy.page({
    store,
    config: {
      navigationBarTitleText: ''
    },
    computed: {

    },
    data: {
      expanded:false,
      showDocker:false,
      items1:[],
      tabs:[
        {text:'推荐匹配'},
        {text:'条件查找'},
      ],
      selectedTab:0,
      iconText:{
        text:'我的好友',
        src:'icon_myfriends@3x'
      },
      list:[
        {text:'性别'},
        {text:'院校'},
        {text:'等级'},
      ],
      selOrder:-1,
      list1:[
        {text:'不限'},
        {text:'男'},
        {text:'女'},
        {text:'保密'},
      ],
      list1Sel:-1,
      list2:[
      ],
      list2Sel:-1,
      list3:[
        {text:'学生'},
        {text:'学杂'},
        {text:'学子'},
        {text:'雪碧'},
      ],
      list3Sel:-1,
      expandItems:[],
      curSelItem:''
    },
    methods: {
      handleTab({tab ,index}){
        this.selectedTab = index;
        this.showDocker = false;
      },
      handleToQuestion(){
        navToPage('/pages/section3/myFriendPage')
      },
      onCOrderList(index){
        this.selOrder = index
        console.log(' this.selOrder :',  this.selOrder );
        if(index > -1){
          console.log('this.showDocker')
          this.showDocker = true;
        }else{
          this.showDocker = false;

        }
      },
      onCListSelect1(index){
        this.list1Sel = index;
      },
      onCListSelect3(index){
        this.list3Sel = index;
      },
      onExpand(exp){
        this.expandItems = exp;
      },
      onClickCCollapseItem({id}){
        this.curSelItem = id;
      },
      onCloseDocker(){
        this.showDocker = false;
        this.selOrder = -1;
      }
    },
    onLoad(){
      showMsg('共12位好友');
    },
    created () {
      let arr = []
      for(let i = 0 ; i < 19 ; i++){
        arr.push({
          header:'',
          name:'追风筝的人',
          like: i%2,
          tag:'学霸',
          school:'南华大学',
          dest:'答疑解惑，我们的职责,答疑解惑，我们的职责',
          id:i
        });
      }
      this.items1 = arr;
      arr = []
      for(let i = 0 ; i < 10 ; i++){
        let temp = {
          header:'',
          prov:'北京',
          items:[],
          id:i
        };

        for(let j = 0 ; j < 5 ; j++){
          let obj = {
            id: `${i}-${j}`,
            school:'南华大学',
          }
          temp.items.push(obj);

        }
        arr.push(temp);
      }



      this.list2 = arr;



      this.iconText.src = getImgUrlEx(this.iconText.src);
   }
  });
</script>
<style lang="scss">
  .friendPage{
    &.fixed{
      position: fixed;
      overflow: hidden;
      height: 100%;
    }
    .header{
      padding: 0 30rpx;
      height: 144rpx;
      display: flex;
      justify-content: space-between;
      align-items: center;
      background-color: #FFFFFF;
      .ctab{
        width: 460rpx;
      }
      .titleIcon{
        font-size:28rpx;
        font-weight:400;
        color:#4FAC1B;
        line-height:28rpx;
        >image{
          width:48rpx;
          height:48rpx;
          margin-bottom: 16rpx;
        }
      }
      .titleImg{

      }
    }

    button{
      margin: 20rpx;
    }
    .item{
      height: 100rpx;
      background-color: #07c160;

      &:nth-child(odd){
        background-color: #1989fa;
      }

    }



    .gwyCard{
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      background:rgba(242,242,242,1);
      padding: 32rpx 30rpx;
      justify-content: space-between;
      .gwyCard-item{
        margin-bottom: 32rpx;
        &:nth-child(odd){

        }


      }
    }

    .poper{
      width: 750rpx;
      .c1{
        width: 750rpx;
        height: 200rpx;
        background-color: #07c160;
      }

      .c2{
        width: 750rpx;
        height: 800rpx;
        background-color: chartreuse;
      }

      .CListSelect1{
        background:rgba(242,242,242,1);
        padding: 32rpx 30rpx;
        box-sizing: border-box;
        .CListSelect-item{
          margin-bottom: 20rpx;
          &:last-child{
            margin-bottom: 0;
          }
        }
      }

    }

    .CCollapse{
      padding: 30rpx 32rpx 0;
      background:rgba(242,242,242,1);
      box-sizing: border-box;
    }
    .collapse-item{
      background: #FFF;
      width:690rpx;
      box-sizing: border-box;
      margin-bottom: 20rpx;
      border-radius:8rpx;
    }
    .collapse-item-header{
      width: 100% !important;
    }
    .collapseItem{
      font-size:32rpx;
      font-family:PingFang-SC-Regular,PingFang-SC;
      font-weight:400;

      line-height:40rpx;
      display: flex;
      align-items: center;
      height: 120rpx;
      margin-left: 40rpx;
      position: relative;
      padding: 0 40rpx;

      &.selected{
        color:rgba(79,172,27,1);
      }
      &::after{
        content:'';
        position: absolute;
        background:rgba(230,230,230,1);
        height: 1px;
        width: 100%;
        top:100%;
        left: 50%;
        width:650rpx;
        transform: translateX(-50%);
      }
    }
  }
</style>
<config>
{
  navigationBarTitleText: '好友',
  usingComponents: {
  CExpand:'~UI/CExpand',
  CDockerPoper:'~UI/CDockerPoper',
  CTab:'~UI/CTab',
  COrderList:'~UI/COrderList',
  CListSelect:'~UI/CListSelect',
  IconText:'~Custom/IconText',
  FriendCard:'~Custom/FriendCard',
  CCollapse:'~UI/CCollapse',
  CCollapseItem:'~UI/CCollapseItem',
  }
}
</config>
