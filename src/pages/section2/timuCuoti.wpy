<template>
  <div class="page timuCuoti">
    <div class="row1">
      <CircleText :text="selText" external-cls="col1" v-if="sel > -1" />
      <span class="col2">{{ text }}</span>
      <CircleText
        :text="item.title[0]"
        v-for="(item, index) in items1"
        :key="index"
        @click.native="onCircleText(index)"
        type="info"
        external-cls="col3"
      />
    </div>

    <div class="row2">
      <CListWrap1
        :type="type"
        :params="params"
        url="/api/subjectQuestion/getErrorList"
        @loaded="onLoaded"
        :reloadKey="refreshKey1"
      >
        <TimuCuotiItem
          v-for="(item, index) in clist"
          external-cls="TimuCuotiItem"
          :cuoti="item"
          :key="index"
        />
      </CListWrap1>
    </div>

    <FixedBottomCuoti wrongNum="{{total}}" @btn="onBtn" />
  </div>
</template>

<script>
import wepy from '@wepy/core';
import store from 'store';
import { navToPage } from '@/common/navUtils';
import { mapGetters, mapMutations } from '@wepy/x';
import { getSubjecListByType } from '@/http/http-business';
import { delNullProperty } from '@/common/utils';

const type = 'timu-list-cuoti';

wepy.page({
  store,
  config: {
    navigationBarTitleText: ''
  },
  computed: {
    ...mapGetters(['items', 'user']),
    clist() {
      const list = this.items[this.type];
      return list || [];
    },
    params() {
      let obj = {
        userId: this.user.id,
        subjectId: this.sel > -1 ? this.items1[this.sel].id : ''
      };

      obj = delNullProperty(obj);
      return obj;
    },
    selText() {
      if (this.items1.length > 0 && this.sel > -1) {
        let text = this.items1[this.sel].title[0];
        return text;
      }

      return '';
    },
    text() {
      if (this.items1.length > 0 && this.sel > -1) {
        let text = this.items1[this.sel].title;
        return text;
      }

      return '';
    }
  },
  data: {
    refreshKey1: new Date().getTime(),
    items1: [],
    items2: [],
    sel: -1,
    type,
    subjectId: '',
    total: 0
  },
  methods: {
    onLoaded(res) {
      this.total = res.total || 0;
    },
    onCircleText(index) {
      if (this.sel != index) {
        this.sel = index;
      } else {
        this.sel = -1;
      }
      this.refreshKey1 = new Date().getTime();
    },
    onBtn() {
      const subjectId = this.sel > -1 ? this.items1[this.sel].id : '';
      navToPage('/pages/section2/timu', {
        cuoti: true,
        subjectId
      });
    }
  },
  onShow() {},
  onLoad(q = {}) {
    // this.subjectId = q.subjectId;
    getSubjecListByType(3).then(res => {
      this.items1 = res;
    });
  }
});
</script>
<style lang="scss">
page {
  background: rgba(242, 242, 242, 1);
}
.timuCuoti {
  .row1 {
    min-width: 750rpx;
    overflow-x: auto;
    height: 120rpx;
    padding: 20rpx 38rpx;
    box-sizing: border-box;
    background: rgba(255, 255, 255, 1);
    box-shadow: 0rpx 4rpx 12rpx 0rpx rgba(0, 0, 0, 0.08);
    display: flex;
    align-items: center;

    .col1 {
      align-self: flex-start;
    }
    .col2 {
      margin: 0 42rpx 0 16rpx;
      white-space: nowrap;

      font-family: PingFangSC-Medium, PingFangSC;
      font-weight: 500;
      color: rgba(79, 172, 27, 1);
      font-size: 32rpx;
    }
    .col3 {
      margin-right: 40rpx;
    }
  }

  .row2 {
    display: flex;
    flex-direction: column;
    padding-top: 30rpx;
    align-items: center;
    .TimuCuotiItem {
      margin: 0 auto 20rpx;
    }
  }
}
</style>
<config>
{
    navigationBarTitleText: '高频错题',
    usingComponents: {
  CircleText:'~Custom/CircleText',
  TimuCuotiItem:'~Custom/TimuCuotiItem',
  FixedBottomCuoti:'~Custom/FixedBottomCuoti',
  CListWrap1:'~UI/CListWrap1',

    }
}
</config>
