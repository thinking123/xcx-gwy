<template>
  <div class="bijiben external-cls">
    <div class="row1">
      <div class="col1">
        {{ text }}
      </div>
      <div class="col2" @click="onFilter">
        筛选
      </div>
    </div>

    <div class="row2">
      <CListWrap1
        :type="type"
        :params="params"
        url="/api/subjectQuestion/getNoteList"
        :reloadKey="refreshKey1"
        @loaded="onLoaded"
      >
        <BijiItem
          v-for="(item, index) in clist"
          :biji="item"
          :key="item.id"
          :index="index"
          external-cls="BijiItem"
        />
      </CListWrap1>
    </div>

    <CPopup
      :show="show"
      position="bottom"
      @close="show = false"
      zIndex="999"
      overlay="{{ true }}"
    >
      <div class="filter">
        <HeaderClose text="筛选" @click="show = false" />

        <div class="body">
          <picker-view
            indicator-class="indicatorCls"
            style="width: 630rpx; height:602rpx;"
            value="{{val}}"
            bindchange="bindChange"
          >
            <picker-view-column>
              <view wx:for="{{items1}}" class="item">{{ item.title }}</view>
            </picker-view-column>
          </picker-view>

          <CButton text="确认" @tap.native="onSubmit" external-cls="btn" />
        </div>
      </div>
    </CPopup>
  </div>
</template>
<script>
import wepy from '@wepy/core';
import store from 'store';
import { navToPage } from '@/common/navUtils';
import { mapGetters, mapMutations } from '@wepy/x';
import { getSubjecListByType } from '@/http/http-business';
import { delNullProperty } from '@/common/utils';

const type = 'timu-list-bijiben';

wepy.page({
  store,
  config: {
    navigationBarTitleText: ''
  },
  data: {
    refreshKey1: new Date().getTime(),
    total: 0,
    items: [],
    show: false,
    items1: [],
    sel: -1,
    val: [],
    tempVal: [],
    subjectId: '',
    type
  },
  computed: {
    ...mapGetters(['items', 'user']),
    clist() {
      const list = this.items[this.type];
      return list || [];
    },
    params() {
      const i = this.tempVal[0] || -1;
      const t = this.items1[i];
      let obj = {
        subjectId: t ? t.id : '',
        userId: this.user.id
      };
      obj = delNullProperty(obj);

      return obj;
    },
    text() {
      return `共${this.total}题，${this.total}条笔记`;
    }
  },
  methods: {
    onLoaded(res) {
      this.total = res.total || 0;
    },
    onFilter() {
      this.show = true;

      if (this.val[0] != this.tempVal[0]) {
        this.val = this.tempVal;
      }
    },
    onSubmit() {
      this.show = false;
      this.tempVal = this.val;
      this.refreshKey1 = new Date().getTime();
    },
    bindChange(e) {
      this.val = e.$wx.detail.value;
    }
  },
  onLoad() {
    getSubjecListByType(3).then(res => {
      this.items1 = res;
    });
  }
});
</script>
<style lang="scss">
page {
  background: rgba(242, 242, 242, 1);
}
.bijiben {
  .row1 {
    width: 750rpx;
    height: 100rpx;
    background: rgba(255, 255, 255, 1);
    box-shadow: 0rpx 4rpx 12rpx 0rpx rgba(0, 0, 0, 0.08);
    padding: 30rpx 0 30rpx 40rpx;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    justify-content: space-between;
    .col1 {
      font-size: 28rpx;
      font-family: PingFangSC-Semibold, PingFangSC;
      font-weight: 600;
      color: rgba(51, 51, 51, 1);
      line-height: 40rpx;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .col2 {
      font-size: 32rpx;
      font-family: PingFangSC-Semibold, PingFangSC;
      font-weight: 600;
      color: rgba(79, 172, 27, 1);
      line-height: 32rpx;
      padding: 0 40rpx;
      margin-right: 40rpx;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
}

.row2 {
  padding-top: 30rpx;
  display: flex;
  align-items: center;
  flex-direction: column;
  .BijiItem {
    margin: 0 auto 20rpx;
  }
}

.filter {
  height: 880rpx;
  .body {
    display: flex;
    flex-direction: column;
    align-items: center;
    .indicatorCls {
      font-weight: 400;
      height: 124rpx !important;
      color: #4fac1b;
      border-color: #4fac1b;
    }
  }

  .item {
    font-size: 36rpx;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .btn {
    width: 690rpx;
    height: 96rpx;
  }
}
</style>

<config>
  {
  navigationBarTitleText: '笔记本',
  usingComponents: {
  BijiItem:'~Custom/BijiItem',

  CButton:'~UI/CButton',
  HeaderClose:'~Custom/HeaderClose',
  CPopup:'~UI/CPopup',
  CListWrap1:'~UI/CListWrap1',

  }
  }
</config>
