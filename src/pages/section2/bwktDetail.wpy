<template>
  <div class="page bwktDetail">
    <video :src="src" controls autoplay />
    <CTab
      :tabs="tabs"
      :bottomLine="bottomLine"
      external-cls="cTab"
      bottom-cls="bottomLine"
      @changeTab="handleTab"
    />
    <block v-if="selectedTab == 0">
      <FixedBottomBuyBtn :price="price" :buyed="buyed" @buy="onBuy" />

      <CircleIconButton
        src="btn_video_edit@3x"
        @click.native="handleIconBtn($event)"
        external-cls="circleIconButton1"
        data-set="edit"
      />
      <CircleIconButton
        src="btn_like@3x"
        @click.native="handleIconBtn($event)"
        external-cls="circleIconButton2"
        data-set="like"
      />
    </block>

    <view style="display:{{selectedTab == 1?'block':'none'}}">
      <CListWrap1
        :type="type"
        :params="params"
        url="/api/subjecAudio/getSubjectChapterHomeList"
        v-if="subjectId"
      >
        <CCollapse :value="expandItems" @change="onExpand">
          <CCollapseItem
            v-for="item in clist"
            :key="item.id"
            collapse-item="collapse-item"
            :title="item.text"
            :name="item.id"
          >
            <MediaItem
              v-for="m in item.items"
              :key="m.id"
              :media="m"
              typeItem="text"
              external-cls="mediaItem"
            />
          </CCollapseItem>
        </CCollapse>
      </CListWrap1>

      <CircleIconButton
        src="btn_video_edit@3x"
        @click.native="handleIconBtn($event)"
        external-cls="circleIconButton3"
        data-set="edit"
      />

      <FixedBottomBuyBtn :price="price" :buyed="buyed" @buy="onBuy" />
    </view>

    <block v-if="selectedTab == 2">
      <MediaCommentItem v-for="item in items2" :key="item.id" :user="item" />
      <FixedBottomInputTag
        placeholder="留言评价"
        external-cls="FixedBottomInputTag"
        external-cls-InputTag="InputTag"
        @click.native="onShowPoper"
      />
    </block>

    <CPopup
      :show="show"
      position="bottom"
      @close="show = false"
      zIndex="999"
      overlay="{{ true }}"
    >
      <div class="learn">
        <HeaderClose
          text="填写核心知识点"
          external-cls="header"
          @click="show = false"
        />
        <div class="body">
          <CTextarea
            :val="commentVal"
            @change="onChange"
            placeholder="请填写"
            total="{{200}}"
            showLine="{{false}}"
          />
          <CButton text="确认" @tap.native="onSubmit" external-cls="row" />
        </div>
      </div>
    </CPopup>
  </div>
</template>

<script>
import wepy from '@wepy/core';
import store from 'store';
import { getImgUrlEx } from '@/common/utils';
import { mapGetters, mapMutations } from '@wepy/x';
import { navToPage } from '@/common/navUtils';
const type = 'video-list';

wepy.page({
  store,
  config: {
    navigationBarTitleText: ''
  },
  computed: {
    ...mapGetters(['user', 'items']),
    params() {
      return {
        subjectId: this.subjectId,
        sortType: '1',
        type: '2',
        userId: this.user.id
      };
    },
    clist() {
      const list = this.items[type];
      return list || [];
    }
  },
  data: {
    src:
      'https://interactive-examples.mdn.mozilla.net/media/examples/flower.webm',
    tabs: [{ text: '课程介绍' }, { text: '课时列表' }, { text: '学友评论' }],
    bottomLine: 1,
    selectedTab: 2,
    price: 200,
    buyed: false,
    items1: [],
    expandItems: [],
    items2: [],
    show: false,
    commentVal: '',
    subjectId: '',
    type
  },
  methods: {
    handleTab({ tab, index }) {
      console.log('tab', tab, index);
      this.selectedTab = index;
      if (index != 2) {
        this.show = false;
      }
    },
    onBuy() {
      this.buyed = !this.buyed;
    },
    handleIconBtn(e) {
      const type = e.$wx.target.dataset.set;
      if (type == 'edit') {
        navToPage('/pages/section2/mediaSubmitCommentPage');
      } else {
      }
    },
    onExpand(exp) {
      this.expandItems = exp;
    },
    onChange(v) {
      this.commentVal = v;
    },
    onShowPoper() {
      this.show = true;
    },
    onSubmit() {
      this.show = false;
    }
  },
  onShow() {},
  onLoad(query = {}) {
    this.subjectId = query.subjectId;
  }
});
</script>
<style lang="scss">
page {
  background: rgba(242, 242, 242, 1);
}
.bwktDetail {
  video {
    width: 750rpx;
    height: 400rpx;
  }

  .cTab {
    height: 112rpx;
  }
  .bottomLine {
    height: 6rpx !important;
    border-radius: 0 !important;
  }

  .circleIconButton1 {
    right: 20rpx;
    bottom: 320rpx;
    position: fixed;
  }
  .circleIconButton2 {
    right: 20rpx;
    bottom: 180rpx;
    position: fixed;
  }

  .circleIconButton3 {
    right: 20rpx;
    bottom: 180rpx;
    position: fixed;
  }

  .collapse-item {
    font-size: 32rpx;
    font-family: PingFangSCSemibold-, PingFangSCSemibold;
    font-weight: normal;
    color: rgba(51, 51, 51, 1);
    line-height: 40rpx;
  }

  .mediaItem {
    margin: 0 auto;
  }

  .FixedBottomInputTag {
    width: 718rpx;
    height: 80rpx;
  }

  .learn {
    height: 712rpx;
    .body {
      display: flex;
      flex-direction: column;
      align-items: center;
      .row {
        margin-top: 46rpx;
      }
    }
  }
}
</style>
<config>
{
    navigationBarTitleText: '',
    usingComponents: {
  CTab:'~UI/CTab',
  FixedBottomBuyBtn:'~Custom/FixedBottomBuyBtn',
  CircleIconButton:'~Custom/CircleIconButton',
  FixedBottomInputTag:'~Custom/FixedBottomInputTag',
  MediaCommentItem:'~Custom/MediaCommentItem',
  HeaderClose:'~Custom/HeaderClose',
  MediaItem:'~Custom/MediaItem',
  CCollapse:'~UI/CCollapse',
  CTextarea:'~UI/CTextarea',
  CButton:'~UI/CButton',
  CPopup:'~UI/CPopup',
  CCollapseItem:'~UI/CCollapseItem',
  CListWrap1:'~UI/CListWrap1',

    }
}
</config>
