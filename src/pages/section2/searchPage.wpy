<template>
  <div class="page searchPage">
    <div class="header">
      <CSearch
        :val="search"
        @change="inputChange"
        external-cls="search"
        debounce
      />

      <CTab
        type="radius"
        :tabs="tabs"
        @changeTab="handleTab"
        external-cls="ctab"
        v-if="search"
      />
    </div>

    <block v-if="search">
      <CListWrap1
        :type="type1"
        :params="params1"
        :show="selectedTab == 0"
        url="/api/subjecAudio/getSearchList"
        :reloadKey="refreshKey1"
        noEncode
      >
        <MediaItem
          v-for="item in clist1"
          :media="item"
          :key="item.id"
          external-cls="classCard"
          single
        />
      </CListWrap1>

      <CListWrap1
        :type="type2"
        :params="params2"
        :show="selectedTab == 1"
        url="/api/subjecAudio/getSearchList"
        :reloadKey="refreshKey2"
        noEncode
      >
        <MediaItem
          v-for="m in clist2"
          :key="m.id"
          :media="m"
          typeItem="text"
          external-cls="classCard1"
          selfNav
          @click="onNav(m)"
          single
        />
      </CListWrap1>

      <CListWrap1
        :type="type3"
        :params="params3"
        :show="selectedTab == 2"
        url="/api/subjectQuestion/getSearchList"
        :reloadKey="refreshKey3"
        noEncode
      >
        <TimuCuotiItem
          v-for="(item, index) in clist3"
          external-cls="jinLianItem"
          :cuoti="item"
          :key="index"
          @click="onNavTimuCuotiItem(item)"
        />
      </CListWrap1>
    </block>

    <block v-else>
      <div class="empty">
        <div class="row1" v-if="emptyItems.length > 0">
          搜索标签推荐
        </div>
        <div class="row2">
          <span
            v-for="(item, index) in emptyItems"
            :key="index"
            @click="handleEmptyItem(item)"
            class="empty-item"
          >
            {{ item.searchName }}
          </span>
        </div>
      </div>
    </block>
  </div>
</template>

<script>
import wepy from '@wepy/core';
import store from 'store';
import { mapGetters } from '@wepy/x';
import { getSearchRecordList } from '@/http/http-business';
import { navToPage } from '@/common/navUtils';

const type1 = 'searchPage_1';
const type2 = 'searchPage_2';
const type3 = 'searchPage_3';

wepy.page({
  store,
  config: {
    navigationBarTitleText: ''
  },
  computed: {
    ...mapGetters(['items', 'user']),
    params1() {
      return {
        userId: this.user.id,
        type: '1',
        searchName: this.search
      };
    },
    clist1() {
      const list = this.items[type1];
      return list || [];
    },
    params2() {
      return {
        userId: this.user.id,
        type: '2',
        searchName: this.search
      };
    },
    clist2() {
      const list = this.items[type2];
      return list || [];
    },
    params3() {
      return {
        userId: this.user.id,
        searchName: this.search
      };
    },
    clist3() {
      const list = this.items[type3];
      return list || [];
    }
  },
  data: {
    search: '',
    isSearching: false,
    tabs: [{ text: '随听音频' }, { text: '部委课堂' }, { text: '精炼题目' }],
    selectedTab: 0,
    emptyItems: [],
    type1,
    type2,
    type3,
    refreshKey1: new Date().getTime(),
    refreshKey2: new Date().getTime(),
    refreshKey3: new Date().getTime()
  },
  methods: {
    inputChange(v) {
      this.search = v;
      if (!v) {
        this.selectedTab = 0;
      }
    },
    handleTab({ tab, index }) {
      this.selectedTab = index;
    },
    handleJinLianItemAdd(id) {
      console.log('id', id);
    },
    handleJinLianItemEdit(id) {
      console.log('id', id);
    },
    handleCBtn() {},
    handleEmptyItem(item) {
      this.search = item.searchName;
    },
    onNav(m) {
      navToPage('/pages/section2/bwktDetail', {
        subjectId: m.subjectId,
        videoItem: JSON.stringify(m),
        single: true
      });
    },
    onNavTimuCuotiItem(item) {
      navToPage('/pages/section2/timu', {
        single: true,
        item: JSON.stringify(item),
        subjectId: item.subjectId
      });
    }
  },
  onShow() {},
  onLoad() {
    getSearchRecordList().then(res => {
      this.emptyItems = res;
    });
  }
});
</script>
<style lang="scss">
page {
  background: rgba(242, 242, 242, 1);
}
.searchPage {
  height: auto;
  display: flex;
  flex-direction: column;
  align-items: center;

  .header {
    background: rgba(255, 255, 255, 1);
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 32rpx;
    .search {
      margin: 32rpx;
    }

    .ctab {
      width: 690rpx;
      margin-bottom: 32rpx;
    }
  }

  .classCard {
    margin-bottom: 32rpx;
  }

  .classCard1 {
    margin-bottom: 32rpx;
  }

  .titleIcons {
    display: flex;
    justify-content: space-around;
    width: 690rpx;
    height: 200rpx;
    background: rgba(255, 255, 255, 1);
    border-radius: 8rpx;
    align-items: center;
    margin: 32rpx 0;
    > .titleIcon {
      font-size: 32rpx;
      font-family: PingFangSC-Medium, PingFangSC;
      font-weight: 500;
      color: rgba(51, 51, 51, 1);
      line-height: 40rpx;
      > image {
        margin-top: 16rpx;
      }
    }
  }

  .cLabelRightButton {
    font-size: 32rpx;
    font-family: PingFangSC-Medium, PingFangSC;
    font-weight: 500;
    color: rgba(51, 51, 51, 1);
    line-height: 44rpx;
    padding: 28rpx 30rpx;
    width: 690rpx;
    height: 100rpx;
    box-sizing: border-box;
    margin-bottom: 32rpx;
  }

  .jinLianItem {
    margin: 32rpx auto;
  }

  .empty {
    display: flex;
    align-items: center;
    flex-direction: column;
    .row1 {
      font-size: 32rpx;
      font-family: PingFang-SC-Regular, PingFang-SC;
      font-weight: 400;
      color: rgba(147, 150, 153, 1);
      line-height: 40rpx;
      margin-top: 80rpx;
      margin-bottom: 64rpx;
    }

    .row2 {
      width: 670rpx;
      display: flex;
      flex-wrap: wrap;
      font-size: 36rpx;
      font-family: PingFangSC-, PingFangSC;
      font-weight: normal;
      color: rgba(79, 172, 27, 1);
      line-height: 44rpx;
      align-items: center;
      .empty-item {
        width: 220rpx;
        position: relative;
        margin-bottom: 64rpx;
        display: flex;
        align-items: center;
        justify-content: center;
        &::after {
          position: absolute;
          right: 0;
          top: 50%;
          transform: translateY(-50%) scaleX(0.5);
          height: 44rpx;
          background: rgba(230, 230, 230, 1);
          width: 1px;
          content: '';
        }

        &:nth-child(3),
        &:nth-child(6) {
          &::after {
            width: 0;
          }
        }
      }
    }
  }
}
</style>
<config>
  {
  navigationBarTitleText: '搜索',
  usingComponents: {
  CTabbar:'~UI/CTabbar',
  CSearch:'~UI/CSearch',
  CLabelRightButton:'~UI/CLabelRightButton',
  CTab:'~UI/CTab',
  ClassCard:'~Custom/ClassCard',
  ClassCard1:'~Custom/ClassCard1',
  IconText:'~Custom/IconText',
  JinLianItem:'~Custom/JinLianItem',
  FixedContinueBtn:'~Custom/FixedContinueBtn',
  TimuCuotiItem:'~Custom/TimuCuotiItem',
  CListWrap1:'~UI/CListWrap1',
  MediaItem:'~Custom/MediaItem',

  }
  }
</config>
