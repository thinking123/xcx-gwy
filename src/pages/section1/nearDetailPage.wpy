<template>
  <div class="page nearDetailPage">
    <div class="header">
      <div class="row1">
        <CircleIconButton
          src="btn_msg@3x"
          @click.native="handleIconBtn($event)"
          data-set="comment"
        />
        <TagHeaderCircleImg
          :tag="nearUser.learnTitle"
          :header="nearUser.userHead"
        />
        <CircleIconButton
          :src="likeIcon"
          @click.native="handleIconBtn($event)"
          data-set="heart"
        />
      </div>
      <div class="row2">
        <image :src="sexType" mode="aspectFit" />
        <span>{{ nearUser.schoolName }}</span>
      </div>

      <div class="row3">
        {{ nearUser.learnTarget }}
      </div>
    </div>
    <div class="content">
      <div class="col1">
        <span>
          {{ nearUser.userIntegral }}
        </span>
        <span>
          积分
        </span>
      </div>
      <div class="col1">
        <span>
          {{ nearUser.fansNum }}
        </span>
        <span>
          粉丝
        </span>
      </div>
      <div class="col1">
        <span>
          {{ nearUser.forumNum }}
        </span>
        <span>
          帖子
        </span>
      </div>
    </div>

    <CListWrap1
      :type="listtype1"
      :params="params1"
      url="/api/near/getForumList"
      v-if="nearUser.id"
    >
      <LunTanMsgItem
        v-for="item in clist1"
        :key="item.id"
        :title="item.title"
        :name="item.postLabel"
        :readerNum="item.scanNum"
        :type="item.type"
        :publishDate="item.addTime"
      />
    </CListWrap1>

    <CPopup
      :show="show"
      position="bottom"
      @close="show = false"
      zIndex="1000"
      overlay="{{ true }}"
    >
      <div class="time">
        <HeaderClose text="私信" external-cls="header" @click="show = false" />
        <div class="body">
          <textarea
            @input="bindinput($event)"
            placeholder="请输入内容"
            maxlength="200"
            class="textarea"
            :value="inputVal"
          />
          <div class="inputNum">{{ inputNum }}/200</div>
          <CButton text="发送" @tap.native="handleSubmit" external-cls="row2" />
        </div>
      </div>
    </CPopup>
  </div>
</template>

<script>
import wepy from '@wepy/core';
import store from 'store';
import { getImgUrlEx, isEmptyString, showMsg } from '@/common/utils';
import { upPrivateMsg, collectUser, getMsgById } from '@/http/http-business';
import { mapGetters } from '@wepy/x';

const listtype1 = 'nearPageList';

wepy.page({
  store,
  config: {
    navigationBarTitleText: ''
  },
  computed: {
    ...mapGetters(['items']),
    likeIcon() {
      if (this.nearUser.isCollect) {
        return this.heartSelIcon;
      }

      return this.heartIcon;
    },

    sexType() {
      if (this.nearUser.userSex == 'men') {
        return this.men;
      }
      return this.women;
    },
    inputNum() {
      return this.inputVal.length;
    },
    params1() {
      return {
        userId: this.nearUser.id
      };
    },
    clist1() {
      const list = this.items[this.listtype1];
      return list || [];
    }
  },
  data: {
    listtype1,
    nearUser: {
      isCollect: false,
      tag: '',
      sex: '',
      dest: '',
      school: '',
      userIntegral: '0',
      fansNum: '0',
      forumNum: '0'
    },
    heartIcon: 'btn_like@3x',
    heartSelIcon: 'btn_liked@3x',
    men: 'icon_men@3x',
    women: 'icon_women@3x',
    show: false,
    inputVal: ''
  },
  methods: {
    handleIconBtn(e) {
      const type = e.$wx.target.dataset.set;
      if (type == 'comment') {
        this.inputVal = '';
        this.show = true;
      } else {
        collectUser(this.nearUser.id).then(res => {
          this.nearUser.isCollect = !this.nearUser.isCollect;
        });
      }
    },
    handleMsgItem(item) {},
    handleSubmit() {
      if (isEmptyString(this.inputVal)) {
        return showMsg('输入内容');
      }
      this.show = false;
      upPrivateMsg(this.nearUser.id, this.inputVal);
      this.inputVal = '';
    },
    bindinput(e) {
      this.inputVal = e.$wx.detail.value;
    }
  },
  onLoad(query = {}) {
    const { id } = query;
    getMsgById(id).then(res => {
      this.nearUser = res;
      wx.setNavigationBarTitle({ title: nearUser.userName });
    });
  },
  onShow() {},
  created() {
    this.heartIcon = getImgUrlEx(this.heartIcon);
    this.heartSelIcon = getImgUrlEx(this.heartSelIcon);
    this.men = getImgUrlEx(this.men);
    this.women = getImgUrlEx(this.women);
  }
});
</script>
<style lang="scss">
.nearDetailPage {
  background: rgba(242, 242, 242, 1);
  .header {
    background: rgba(255, 255, 255, 1);
    font-size: 24rpx;
    font-family: PingFangSC-Regular, PingFangSC;
    font-weight: 400;
    color: rgba(153, 153, 153, 1);
    line-height: 28rpx;
    position: relative;
    overflow: hidden;
    &::after {
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      width: 750rpx;
      height: 1px;
      background-color: #e6e6e6;
      content: '';
    }

    .row1 {
      padding: 40rpx 60rpx 0;
      display: flex;
      justify-content: space-around;
      align-items: center;
      margin-bottom: 28rpx;
    }

    .row2 {
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 24rpx;
      > image {
        width: 32rpx;
        height: 32rpx;
        margin-right: 8rpx;
      }
    }

    .row3 {
      margin-bottom: 40rpx;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }

  .content {
    width: 750rpx;
    height: 168rpx;
    display: flex;
    background: rgba(255, 255, 255, 1);
    margin-bottom: 20rpx;
    .col1 {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      position: relative;

      > label:first-child {
        font-size: 40rpx;
        font-family: PingFangSC-, PingFangSC;
        font-weight: normal;
        color: rgba(0, 0, 0, 1);
        line-height: 48rpx;
        margin-bottom: 20rpx;
      }

      > label:last-child {
        font-size: 28rpx;
        font-family: PingFang-SC-Regular, PingFang-SC;
        font-weight: 400;
        color: rgba(102, 102, 102, 1);
        line-height: 36rpx;
      }

      &:not(last-child)::after {
        position: absolute;
        content: '';
        right: 0;
        top: 50%;
        transform: translateY(-50%) scaleX(0.5);
        width: 1rpx;
        height: 104rpx;
        background: rgba(230, 230, 230, 1);
      }
    }
  }

  .time {
    .body {
      display: flex;
      flex-direction: column;
      align-items: center;
      .row1 {
        margin: 62rpx 0 64rpx 0;
      }

      .row2 {
        margin-bottom: 62rpx;
      }

      .inputNum {
        font-size: 24rpx;
        font-family: PingFangSC-Regular, PingFangSC;
        font-weight: 400;
        color: rgba(79, 172, 27, 1);
        line-height: 24rpx;
        align-self: flex-end;
        margin-bottom: 90rpx;
        margin-right: 40rpx;
      }

      .textarea {
        margin-top: 40rpx;
        height: 400rpx;
        font-size: 36rpx;
        font-weight: 400;
        color: #4fac1b;
        line-height: 44rpx;
        caret-color: #4fac1b;
      }
      textarea::placeholder {
        color: rgba(204, 204, 204, 1);
      }
    }
  }
}
</style>
<config>
{
    navigationBarTitleText: '',
    usingComponents: {
  CircleIconButton:'~Custom/CircleIconButton',
  TagHeaderCircleImg:'~Custom/TagHeaderCircleImg',
  LunTanMsgItem:'~Custom/LunTanMsgItem',
  CButton:'~UI/CButton',
  CPopup:'~UI/CPopup',
  HeaderClose:'~Custom/HeaderClose',
  CListWrap1:'~UI/CListWrap1',

    }
}
</config>
