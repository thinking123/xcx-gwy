<template>
    <div class="TimuContent external-cls"  :class="{'TimuContent--night':night}">
      <div class="TimuContent-title">
        {{timu.title}}
      </div>
      <TimuSelector v-for="(item,index) in items"
                    :onlyShowTimu="onlyShowTimu"
                    :key="index"
                    :item="item"
                    :hadSelected="hadSelected"
                    external-cls="TimuSelector"
                    data-index="{{index}}"
                    catchtouchstart="{{catchMove ? noop : ''}}"
                    catchtouchmove="{{catchMove ? noop : ''}}"
                    catchtouchend="{{catchMove ? noop : ''}}"
                    capture-bind:touchstart="onClickTimuSelector"
      />
    </div>
</template>
<script>
  import wepy from '@wepy/core'

  import store from 'store';
  import { mapGetters} from '@wepy/x';
  wepy.component({
    store,
    data: {
      catchMove:false
    },
    externalClasses:[
      'external-cls',
    ],
    props:{
      timu:{
        type:Object,
        default:{
          title:'',
          items:[
            {

            }
          ],
          rightIndex:-1
        }
      },
      hadSelected:Boolean,
      answer:{
        type:Object,
        default:{
          wrongRate:0,
          wrongreason:'',
          rightRag:'',
        }
      },
      onlyShowTimu:{
        type:Boolean,
        default: false
      },
    },
    events: {

    },
    computed:{
      ...mapGetters(['night']),
      items(){
        if(this.timu && this.timu.items){
          return this.timu.items;
        }

        return  [];
      }
    },
    methods: {
      noop(){
        console.log('noop iin timucomtnet')
      },
      onClickTimuSelector(e){

        const index = e.$wx.target.dataset.index;
        console.log('click')
        if(!this.hadSelected){
          this.catchMove = true;
          const item = this.timu.items[index];
          const rightIndex = this.timu.items.findIndex(f=>{
            return f.tag == this.answer.rightRag;
          });
          const rightItem = this.timu.items[rightIndex];

          if(index == rightIndex){
            item.status = 1;
          }else{
            rightItem.status = 1;
            rightItem.error = true;
            item.status = 2;
          }
          if(this.onlyShowTimu){
            item.status = 1;
          }
          this.$emit('select' , {index , item});
          this.catchMove = false;
        }
      }
    },
    created () {

    }
  });
</script>
<style lang="scss">
  .TimuContent--night{
    color: #FFF !important;

    background-color: rgba(49,50,51,1) !important;
  }
  .TimuContent{
    width:100%;
    padding: 40rpx 30rpx;
    box-sizing: border-box;
    font-size:36rpx;
    font-family:PingFangSC-Semibold,PingFangSC;
    font-weight:600;
    color:rgba(0,0,0,1);
    line-height:50rpx;
    background:rgba(255,255,255,1);
    &-title{
      margin-bottom:80rpx;
    }
    &--night{
      color: #FFF;
    }
    .TimuSelector{
      margin-top: 80rpx;
    }
  }
</style>

<config>
  {
  navigationBarTitleText: '',
  usingComponents: {
  TimuSelector:'~Custom/TimuSelector'
  }
  }
</config>
