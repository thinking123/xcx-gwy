<template>
  <div class="TimuItem external-cls" :class="{ 'TimuItem--night': night }">
    <HeaderClose
      :text="title"
      external-cls="header"
      external-cls-VerticalTextBar="header-VerticalTextBar"
      showClose="{{false}}"
    >
      <div class="title-text" v-if="showHeaderText">
        <span>
          {{ index + 1 }}
        </span>
        <span>/{{ total }}</span>
      </div>
    </HeaderClose>
    <TimuContent
      :timu="timu"
      @select="onSelect"
      :onlyShowTimu="onlyShowTimu"
      external-cls="TimuContent"
      :answer="timuItem.answer"
      :hadSelected="hadSelected"
    />
    <block v-if="hadSelected && !onlyShowTimu">
      <TimuAnswer
        :answer="timuItem.answer"
        :myTag="myTag"
        external-cls="TimuAnswer"
        :hadSelected="hadSelected"
      />
      <CommentHeader @comment="onComment" external-cls="CommentHeader" />
      <MediaCommentItem
        v-for="item in timuItem.comments"
        :key="item.id"
        external-cls="MediaCommentItem"
        :user="item"
      />
    </block>
  </div>
</template>
<script>
import wepy from '@wepy/core';
import store from 'store';
import { mapGetters } from '@wepy/x';
import { navToPage } from '@/common/navUtils';

wepy.component({
  store,
  data: {
    myTag: ''
  },
  externalClasses: ['external-cls'],
  props: {
    title: {
      type: String,
      default: '选择题'
    },
    curIndex: Number,
    total: Number,
    showHeaderText: {
      type: Boolean,
      default: true
    },
    onlyShowTimu: {
      type: Boolean,
      default: false
    },
    timuItem: {
      type: Object,
      default: {
        comments: [],
        timu: {},
        answer: {},
        hadSelected: false
      }
    },
    hadSelected: false,
    index: Number
  },
  watch: {
    curIndex(v) {
      // this.hadSelected = false;
    },
    hadSelected(v) {
      console.log('hadSelected : ', v);
    }
  },
  events: {},
  computed: {
    ...mapGetters(['night']),
    timu() {
      if (this.timuItem) {
        const t = this.timuItem;
        return {
          title: t.questContent,
          items: [
            {
              text: t['questReadyA'],
              status: 0,
              error: false,
              tag: ''
            },
            {
              text: t['questReadyB'],
              status: 0,
              error: false,
              tag: ''
            },
            {
              text: t['questReadyC'],
              status: 0,
              error: false,
              tag: ''
            },
            {
              text: t['questReadyD'],
              status: 0,
              error: false,
              tag: ''
            }
          ]
        };
      }
      return {};
    }
  },
  methods: {
    onComment() {
      navToPage('/pages/section2/mediaSubmitCommentPage');
    },

    onSelect({ index, item }) {
      // const item = this.timuItem.timu.items[index];
      this.myTag = item.tag;
      const isRight = item.tag == this.timuItem.answer.rightRag;
      this.$emit('select', { curIndex: this.curIndex, index, item });
    }
  },
  created() {}
});
</script>
<style lang="scss">
.TimuItem--night {
  .header {
    color: #fff !important;
    background-color: rgba(49, 50, 51, 1) !important;
  }

  .header-VerticalTextBar {
    color: #fff !important;
  }
}

.TimuItem {
  width: 690rpx;
  .header {
    width: 690rpx;
    height: 120rpx;
    box-sizing: border-box;
    background-color: #fff;
  }

  .TimuContent {
    margin-bottom: 32rpx;
  }
  .TimuAnswer {
    margin-bottom: 32rpx;
  }

  .CommentHeader {
    left: 50%;
    transform: translateX(-50%);
    width: 750rpx;
  }
  .MediaCommentItem {
    left: 50%;
    transform: translateX(-50%);
    width: 750rpx;
    background-color: #fff;
  }

  .title-text {
    font-size: 48rpx;
    font-family: PingFangSC-Semibold, PingFangSC;
    font-weight: 600;
    color: rgba(79, 172, 27, 1);
    line-height: 66rpx;

    display: flex;
    align-items: center;
    > label:last-child {
      font-size: 32rpx;
      font-family: PingFangSC-Semibold, PingFangSC;
      font-weight: 600;
      color: rgba(153, 153, 153, 1);
      line-height: 44rpx;
    }
  }
}

.TimuItem--night {
  background-color: rgba(49, 50, 51, 1);
  .header {
    color: #fff;
    background-color: rgba(49, 50, 51, 1);
  }
}
</style>

<config>
  {
  navigationBarTitleText: '',
  usingComponents: {
  HeaderClose:'~Custom/HeaderClose',
  TimuContent:'~Custom/TimuContent',
  TimuAnswer:'~Custom/TimuAnswer',
  CommentHeader:'~Custom/CommentHeader',
  MediaCommentItem:'~Custom/MediaCommentItem',
  CTextarea:'~UI/CTextarea',
  CButton:'~UI/CButton',
  CPopup:'~UI/CPopup',
  }
  }
</config>
